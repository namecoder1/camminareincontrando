---
export const prerender = true;
import { sanityClient } from 'sanity:client';
import { PortableText } from 'astro-portabletext';
import ArticleLayout from '../../layout/ArticleLayout.astro';
import { formatDate } from '../../utils';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import Button from '../../components/Button.astro';
import SocialMenu from '../../components/SocialMenu.astro';
import Latest from '../../components/Latest.astro';
import { urlFor } from '../../../sanity/image';

export async function getStaticPaths() {
  const posts = await sanityClient.fetch(
    `*[_type == "post" && defined(slug.current)]`
  );
  return posts.map((post: any) => {
    return {
      params: {
        post_id: post.slug.current,
      },
    };
  });
}

const { post_id } = Astro.params;
const post = await sanityClient.fetch(
  `*[_type == "post" && slug.current == $post_id] {
    _id,
    slug,
    "image": mainImage.asset -> url,
    title,
    "authorName": author->name,
    "updated": _updatedAt,
    "created": _createdAt,
    "categoryName": categories[]->,
    "category": categories[0] -> {title, slug},
    body[],
    excerpt,
    keywords[0..2]
}[0]`,
  { post_id }
);
---

<ArticleLayout
  title={post.title}
  description={post.excerpt}
  ogTitle={post.title + ' | ' + 'Camminare Incontrando'}
  ogDescription={post.excerpt}
  keywords={post.keywords}
  ogType="article"
  ogUrl={'/blog/' + post.slug.current}
  pubTime={post.created}
  modTime={post.updated}
>
  <div
    class="font-poppins mx-auto max-w-auto text-base leading-7 text-gray-700"
  >
    <div class="relative">
      <div class="absolute inset-x-0 bottom-0 h-full bg-gray-800"></div>
      <div class="max-w-auto">
        <div class="relative shadow-xl sm:overflow-hidden">
          <div class="absolute inset-0">
            <img
              src={urlFor(post.image).url()}
              class="h-full w-full lg:w-full lg:h-auto opacity-50"
              alt="Immagine di copertina dell'articolo"
            />
            <div class="absolute inset-0 bg-gray-400/70 mix-blend-multiply">
            </div>
          </div>
          <div class="relative px-6 py-16 sm:py-24 lg:px-8 lg:py-32">
            <h1
              class="text-center text-white text-4xl font-bold tracking-tight sm:text-5xl lg:text-6xl"
            >
              {post.title}
            </h1>
            <div
              class="flex flex-col sm:flex-row items-center justify-center gap-10 mt-10"
            >
              <SocialMenu color="white" />
              {
                post.categoryName.map((current_category_id: any) => (
                  <a id="tag" href={'/blog/tag/' + post.category.slug.current}>
                    {current_category_id.title}
                  </a>
                ))
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    class="font-poppins flex flex-col items-center justify-center bg-white px-6 py-24 lg:py-20 lg:px-8 max-w-prose mx-auto"
  >
    <Breadcrumbs title={post.title} slug={post.slug.current} />
    <div
      id="text"
      class="text-center md:mx-auto lg:max-w-4xl mt-10 prose lg:prose-lg"
    >
      <PortableText value={post.body} />
    </div>
    <div class="py-6 mt-6 text-center">
      <p class="py-2 my-10 px-4 bg-gray-700 text-white rounded-xl">
        Scritto da {post.authorName} | {formatDate(post.updated)}
      </p>
    </div>
    <Button title="Torna Indietro" link="/blog" />
    <div></div>
  </div>
  <div class="mb-20">
    <Latest />
  </div>
</ArticleLayout>

<style>
  #tag {
    margin: 0 10px 0 0;
    background-color: #ef4444;
    padding: 0.375rem 0.75rem;
    border-radius: 15px;
    color: #fff;
    transition: all 200ms linear;
    &:hover {
      background-color: #ef2222;
    }
  }

  #text {
    ul {list-style: disc; list-style-position: inside;}
    a {color: #c44646;}
    blockquote {background-color: #e3e3e3; padding: 15px 10px; border-radius: 7px;}
  }
</style>
